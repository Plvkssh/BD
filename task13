WITH RECURSIVE Subordinates AS (
    SELECT 
        EmployeeID, 
        Name, 
        ManagerID 
    FROM 
        Employees 
    WHERE 
        ManagerID IS NOT NULL
    
    UNION ALL
    
    SELECT 
        e.EmployeeID, 
        e.Name, 
        e.ManagerID 
    FROM 
        Employees e
    JOIN 
        Subordinates s ON e.ManagerID = s.EmployeeID
),

ManagerWithSubordinates AS (
    SELECT 
        e.EmployeeID, 
        e.Name, 
        e.ManagerID, 
        e.DepartmentID, 
        e.RoleID 
    FROM 
        Employees e
    JOIN 
        Subordinates s ON e.EmployeeID = s.ManagerID
    WHERE 
        e.RoleID IN (SELECT RoleID FROM Roles WHERE RoleName = 'Менеджер')
)

SELECT 
    m.EmployeeID,
    m.Name,
    m.ManagerID,
    d.DepartmentName,
    r.RoleName,
    COALESCE(GROUP_CONCAT(DISTINCT p.ProjectName), NULL) AS Projects,
    COALESCE(GROUP_CONCAT(DISTINCT t.TaskName), NULL) AS Tasks,
    COUNT(DISTINCT sub.EmployeeID) AS TotalSubordinates
FROM 
    ManagerWithSubordinates m
LEFT JOIN 
    Departments d ON m.DepartmentID = d.DepartmentID
LEFT JOIN 
    Roles r ON m.RoleID = r.RoleID
LEFT JOIN 
    ProjectAssignments pa ON m.EmployeeID = pa.EmployeeID
LEFT JOIN 
    Projects p ON pa.ProjectID = p.ProjectID
LEFT JOIN 
    TaskAssignments ta ON m.EmployeeID = ta.AssignedTo
LEFT JOIN 
    Employees sub ON sub.ManagerID = m.EmployeeID
GROUP BY 
    m.EmployeeID
HAVING 
    TotalSubordinates > 0
ORDER BY 
    m.Name;
